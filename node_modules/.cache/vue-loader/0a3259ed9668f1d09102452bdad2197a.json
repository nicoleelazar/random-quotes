{"remainingRequest":"/Users/nicoleelazar/Documents/GitHub/random-quotes/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nicoleelazar/Documents/GitHub/random-quotes/src/components/RandomQuote.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nicoleelazar/Documents/GitHub/random-quotes/src/components/RandomQuote.vue","mtime":1564056578000},{"path":"/Users/nicoleelazar/Documents/GitHub/random-quotes/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nicoleelazar/Documents/GitHub/random-quotes/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nicoleelazar/Documents/GitHub/random-quotes/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nicoleelazar/Documents/GitHub/random-quotes/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'RandomQuote',\n\n  props: {\n    quotes: {\n      type: Array,\n      required: true\n    },\n    colors: {\n      type: Array,\n      required: true\n    }\n  }, \n\n  data() {\n    return {\n      quote: '',\n      color: '#8080ff',\n      fadeClass: 'fade',\n    }\n  },\n\n  methods: {\n    newQuote() {\n      this.quote = this.quotes[Math.floor(Math.random() * (this.quotes.length))];\n    },\n    newColor() {\n      this.color = this.colors[Math.floor(Math.random() * (this.colors.length))];\n    }\n  },\n\n    mounted() {\n      setTimeout(() => {\n        this.newQuote()\n        this.newColor()\n      }, 1000);\n  }\n\n}\n",{"version":3,"sources":["RandomQuote.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAeA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"RandomQuote.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <h1 id=\"heading\">Random Quotes</h1>\n    <div id=\"quoteBox\" :style=\"{'background-color': color}\" :class=\"fadeClass\"> \n      <p class=\"quoteMarks\">\"<span class=\"quoteText\">{{ quote.quote }}</span>\"</p>\n      <p><em>A Quote by - {{ quote.author }}</em></p>\n    </div>\n    <div id=\"btn-container\"> <button @click=\"newQuote(); newColor();\" id=\"btn\">New Quote</button> </div>\n\n  </div>\n</template>\n\n\n\n<script>\nexport default {\n  name: 'RandomQuote',\n\n  props: {\n    quotes: {\n      type: Array,\n      required: true\n    },\n    colors: {\n      type: Array,\n      required: true\n    }\n  }, \n\n  data() {\n    return {\n      quote: '',\n      color: '#8080ff',\n      fadeClass: 'fade',\n    }\n  },\n\n  methods: {\n    newQuote() {\n      this.quote = this.quotes[Math.floor(Math.random() * (this.quotes.length))];\n    },\n    newColor() {\n      this.color = this.colors[Math.floor(Math.random() * (this.colors.length))];\n    }\n  },\n\n    mounted() {\n      setTimeout(() => {\n        this.newQuote()\n        this.newColor()\n      }, 1000);\n  }\n\n}\n</script>\n\n\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n\n  #heading {\n    color: rgb(39, 95, 151);\n    background-color: rgba(241, 255, 255, 0.6);\n    max-width: 400px;\n    margin: 30px auto;\n    text-align: center;\n    letter-spacing: 5px;\n  }\n\n  #quoteBox {\n    margin: 30px auto;\n    min-height: 250px;\n    max-width: 600px;\n    font-family: 'Noto Sans', sans-serif;\n    color: white;\n    text-align: center;\n    padding: 40px;\n    border: 3px solid white;\n    border-radius: 3px;\n    box-shadow: 2px 2px 10px white;\n  }\n\n  #btn-container {\n    display: flex;\n    justify-content: center;\n  }\n\n  #btn {\n    width: 200px;\n    height: 50px;\n    background: rgb(39, 95, 151);\n    color: white;\n    font-size: 17px;\n    cursor: pointer;\n    border: none;\n    text-decoration: none;\n  }\n\n  #btn:hover {\n    background: rgb(24, 60, 95);\n    transition: all 0.4s ease;\n  }\n\n  .fade {\n    transition: all 0.5s ease;\n  }\n\n  .quoteMarks {\n    font-size: 30px;\n    line-height: 1.1;\n  }\n\n  .quoteText {\n    font-size: 18px;\n  }\n\n\n</style>\n"]}]}